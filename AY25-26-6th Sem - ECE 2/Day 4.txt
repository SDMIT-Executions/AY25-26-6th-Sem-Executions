Day 4

Leetcode: 1: Two sum

#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;
    int nums[n], arr1[n], arr2[n], result[n];
    int i1 = 0, i2 = 0;

    for (int i = 0; i < n; ++i)
        cin >> nums[i];

    arr1[i1++] = nums[0];
    arr2[i2++] = nums[1];

    for (int i = 2; i < n; ++i) {
        if (arr1[i1 - 1] > arr2[i2 - 1]) {
            arr1[i1++] = nums[i];
        } else {
            arr2[i2++] = nums[i];
        }
    }

    int idx = 0;
    for (int i = 0; i < i1; ++i)
        result[idx++] = arr1[i];
    for (int i = 0; i < i2; ++i)
        result[idx++] = arr2[i];

    for (int i = 0; i < n; ++i)
        cout << result[i] << " ";
    cout << endl;

    return 0;
}

Leetcode 3069: Distribute Elements Into Two Arrays I

#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;
    int nums[n], arr1[n], arr2[n], result[n];
    int i1 = 0, i2 = 0;

    for (int i = 0; i < n; ++i)
        cin >> nums[i];

    arr1[i1++] = nums[0];
    arr2[i2++] = nums[1];

    for (int i = 2; i < n; ++i) {
        if (arr1[i1 - 1] > arr2[i2 - 1]) {
            arr1[i1++] = nums[i];
        } else {
            arr2[i2++] = nums[i];
        }
    }

    int idx = 0;
    for (int i = 0; i < i1; ++i)
        result[idx++] = arr1[i];
    for (int i = 0; i < i2; ++i)
        result[idx++] = arr2[i];

    for (int i = 0; i < n; ++i)
        cout << result[i] << " ";
    cout << endl;

    return 0;
}

---------------------------------------------------------------------------------------------------------------------------------------------------------

Leetcode 136. Single Number

#include <iostream>
using namespace std;
int main() {
    int n;
    cin >> n;//Read array size
    int nums[n],res=0;
    //Read array input values
    for (int i = 0; i < n; ++i)
        cin >> nums[i];
    // perform XOR for all the array values
    for (int i = 0; i < n; ++i) {
        res=res^nums[i];
    }
    // display res
    cout << res << endl;
    return 0;
}








----------------------------------------------------------------------------------------------------------------------------------------------------------
Leetcode 1295. Find Numbers with Even Number of Digits

#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;
    int nums[n], count = 0;

    for (int i = 0; i < n; ++i)
        cin >> nums[i];

    for (int i = 0; i < n; ++i) {
        int num = nums[i], digits = 0;
        while (num != 0) {
            digits++;
            num /= 10;
        }
        if (digits % 2 == 0)
            count++;
    }

    cout << count << endl;
    return 0;
}
--------------------------------------------------------------------------------------------
2D:

Odd values:

#include <iostream>
using namespace std;
int main()			
{			
int row,col;			
cin>>row>>col;
int arr[row][col];			
for(int i=0;i<row;i++)			
{			
     for(int j=0;j<col;j++)			
	{		
	cin>>arr[i][j];	
	if(arr[i][j]%2==1)
	   arr[i][j]+=1;
	}
	
}
for(int i=0;i<row;i++)	
{			
     for(int j=0;j<col;j++)			
	{		
	cout<<arr[i][j];	
	}
	cout<<endl;
}
return 0;
}

----------------------------------------------------------
Diagonal Sum:





Leetcode 977. Squares of a Sorted Array

















